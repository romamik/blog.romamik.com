---
import type { MarkdownHeading } from "astro";
import MainLayout from "../../layouts/MainLayout.astro";
import { getPosts } from "../../lib/blog";
import HeadingTree from "../../layouts/HeadingTree.astro";

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, headings } = await post.render();
const {
  data: { title },
  formattedDate,
} = post;

// Helper function: build a nested tree based on heading.depth
type Heading = MarkdownHeading & {
  children?: Heading[];
  parent?: Heading;
};
function buildHeadingTree(headings: Heading[]): Heading[] {
  let current: Heading = { text: "", slug: "", depth: 0 };
  for (const heading of headings) {
    while (current.parent && heading.depth <= current.depth) {
      current = current.parent;
    }
    if (!current.children) current.children = [];
    heading.parent = current;
    current.children.push(heading);
    current = heading;
  }
  while (current.parent) {
    current = current.parent;
  }
  return current.children ?? [];
}

const headingTree = buildHeadingTree(headings);
console.log(headings, headingTree);
---

---

<MainLayout title={title}>
  <sub>{formattedDate}</sub>
  <h1>{title}</h1>
  <Content />
  <div slot="toc">
    <HeadingTree {headingTree} />
  </div>
</MainLayout>
